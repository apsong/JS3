#! /bin/sh

PROGRAM=`basename $0`

##################### .JS/bin/_SH_UTIL_FUNCTIONS <BEGIN> #######################
EVAL()
{
    echo 1>&2 "#!CMD:[" $@ "]"
    eval "$@"
    echo
}

NEWFILE()
{
    FILE=$1; [ -z "$FILE" ] && { echo 1>&2 "($PROGRAM:NEWFILE)Error: FILE is not set"; exit 100;}

    REAL_FILE=.$FILE/`date "+%Y%m%d-%H%M%S"`#$FILE

    mkdir -p .$FILE || exit 101
    if [ -h $FILE ]; then
rm -f $FILE
    elif [ -e $FILE ]; then
echo 1>&2 "($PROGRAM:NEWFILE)Note: '$FILE' exists and is not a symbolic file. Renamed to '$REAL_FILE.bak'"
        mv $FILE $REAL_FILE.bak
    fi
touch $REAL_FILE && ln -s $REAL_FILE $FILE && echo $REAL_FILE || exit 102
}
##################### .JS/bin/_SH_UTIL_FUNCTIONS <END> #########################

do_test()
{
    PROJECT=proj_`basename $ZIP | sed -e 's/\..*$//'`

    EVAL Azkaban project.delete -p $PROJECT || exit 1
    EVAL Azkaban project.create -p $PROJECT
    EVAL Azkaban project.list
    EVAL Azkaban project.upload -p $PROJECT -z $ZIP
    EVAL Azkaban project.Flows -p $PROJECT --raw

    FLOW=`Azkaban project.Flows -p $PROJECT`
    EVAL Azkaban flow.Jobs -p $PROJECT -f $FLOW

    for I in `seq $RUN_NUM`; do
        echo "#################### ROUND: $I ####################"
        OUTS=`EVAL Azkaban flow.execute -p $PROJECT -f $FLOW $OPTIONS`
        echo "$OUTS"
        EXECID=`echo "$OUTS" | awk '/"execid"/{print $3}'`
        EVAL Azkaban exec.wait -e $EXECID
        EVAL Azkaban exec.Status -e $EXECID
        EVAL Azkaban exec.Logs -e $EXECID
    done
}

HD=`ls -d /mnt/test-CCB/2015*-*/modules/hadoop/hadoop-2.2.0 | sort | tail -1`
EVAL mkdir -p $HD/output
EVAL mkdir -p $HD/tmp

{
    ZIP=/TEST/CCB/flows/staticdata/; OPTIONS=; RUN_NUM=1
    do_test
    ZIP=/TEST/CCB/flows/historyflow/; OPTIONS=; RUN_NUM=1
    do_test

    EVAL rm -f $HD/output/2015/m/03/JP000/pdf/*
    ZIP=/TEST/CCB/flows/main; OPTIONS="flow.num.job.threads=1"; RUN_NUM=5
    do_test
    EVAL "find $HD/output -name '*.pdf' | wc -l"
    EVAL "du -sh $HD/output"
    EVAL ls -l $HD/output/2015/m/03/JP000/pdf/
} 2>&1 | tee `NEWFILE $PROGRAM.out`
