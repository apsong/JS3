#! /bin/sh

PROGRAM=`basename $0`

##################### .JS/bin/_SH_UTIL_FUNCTIONS <BEGIN> #######################
EVAL()
{
    echo "#!CMD:[" $@ "]"
    eval "$@"
}

NEWFILE()
{
    FILE=$1; [ -z "$FILE" ] && { echo 1>&2 "($PROGRAM:NEWFILE)Error: FILE is not set"; exit 100;}

    REAL_FILE=.$FILE/`date "+%Y%m%d-%H%M%S"`#$FILE

    mkdir -p .$FILE || exit 101
    if [ -h $FILE ]; then
rm -f $FILE
    elif [ -e $FILE ]; then
echo 1>&2 "($PROGRAM:NEWFILE)Note: '$FILE' exists and is not a symbolic file. Renamed to '$REAL_FILE.bak'"
        mv $FILE $REAL_FILE.bak
    fi
touch $REAL_FILE && ln -s $REAL_FILE $FILE && echo $REAL_FILE || exit 102
}
##################### .JS/bin/_SH_UTIL_FUNCTIONS <END> #########################

BUILD_BASE=/mnt/birt-build/nmb-server/rolling-build

case $1 in
    --check)
        EVAL find $BUILD_BASE/*-*/
        exit 0
        ;;
esac

NEW_BUILD=`ls $BUILD_BASE/ | grep '[0-9]-[0-9]' | tail -1`
[ -n "$NEW_BUILD" ] || exit 1
EVAL mkdir /TEST/$NEW_BUILD || exit 2
BUILD_PATH=`ls $BUILD_BASE/$NEW_BUILD/*redhat.tar.gz | tail -1` || exit 3
EVAL "cd /TEST/$NEW_BUILD && tar xzvf $BUILD_PATH" || exit 4
