#! /bin/sh

PROGRAM=`basename $0`

##################### .JS/bin/_SH_UTIL_FUNCTIONS <BEGIN> #######################
EVAL()
{
    echo "#!CMD:[" $@ "]"
    eval "$@"
}

NEWFILE()
{
    FILE=$1; [ -z "$FILE" ] && { echo 1>&2 "($PROGRAM:NEWFILE)Error: FILE is not set"; exit 100;}

    REAL_FILE=.$FILE/`date "+%Y%m%d-%H%M%S"`#$FILE

    mkdir -p .$FILE || exit 101
    if [ -h $FILE ]; then
rm -f $FILE
    elif [ -e $FILE ]; then
echo 1>&2 "($PROGRAM:NEWFILE)Note: '$FILE' exists and is not a symbolic file. Renamed to '$REAL_FILE.bak'"
        mv $FILE $REAL_FILE.bak
    fi
touch $REAL_FILE && ln -s $REAL_FILE $FILE && echo $REAL_FILE || exit 102
}
##################### .JS/bin/_SH_UTIL_FUNCTIONS <END> #########################

usage()
{
    echo 1>&2 "Usage: $PROGRAM nmb|ccb [--check]"
}
while [ $# -gt 0 ]; do
    case $1 in
        nmb)
            BUILD_BASE=/mnt/81-build/nmb-server/rolling-build
            LOCAL_BASE=TEST
            ;;
        ccb)
            BUILD_BASE=/mnt/81-build/DataPentamix/ccb
            LOCAL_BASE=CCB
            ;;
        --check)
            EVAL find $BUILD_BASE/*-*/
            exit 0
            ;;
        *)
            usage
            exit 1
            ;;
    esac
    shift
done
[ -z "$BUILD_BASE" ] && { usage; exit 2;}

NEW_BUILD=`ls $BUILD_BASE/ | grep '[0-9]-[0-9]' | tail -1`
[ -n "$NEW_BUILD" ] || exit 1
EVAL mkdir /$LOCAL_BASE/$NEW_BUILD || exit 2
TGZS=`ls $BUILD_BASE/$NEW_BUILD/*redhat*.tar.gz` || exit 3
for TGZ in $TGZS; do
    EVAL "cd /$LOCAL_BASE/$NEW_BUILD && tar xzvf $TGZ" || exit 4
done
