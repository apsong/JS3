#! /bin/sh

PROGRAM=`basename $0`

EVAL()
{
    echo "#!CMD:[" $@ "]"
    eval "$@"
}

usage()
{
    echo 1>&2 "Usage: $PROGRAM {1|2}"
}

ID=$1
[ "$ID" != "1" -a "$ID" != "2" ] && { usage; exit 1;}

[ ! -f scripts/mysql_install_db ] && { echo 1>&2 "Error: Cannot find scripts/mysql_install_db."; exit 2;}

EVAL mkdir $ID.data || exit 3
scripts/mysql_install_db --datadir=$ID.data

cat > $ID.cnf <<EOF
[mysqld]
log-bin=mysql-bin
#replicate-wild-do-table=db1.*
#replicate-wild-do-table=db2.*
#replicate-wild-ignore-table=mysql.*
server-id=$ID
port=`expr 3400 + $ID`
socket=/tmp/mysql.sock$ID
datadir=/opt/mysql/$ID.data
expire_logs_days=3
###rpl_semi_sync_master_enabled=1
###rpl_semi_sync_master_timeout=10000 # 10 second
###rpl_semi_sync_slave_enabled=1
EOF
EVAL cat $ID.cnf
echo

cat > $ID.init.sql <<EOF
INSTALL PLUGIN rpl_semi_sync_master SONAME 'semisync_master.so';
INSTALL PLUGIN rpl_semi_sync_slave SONAME 'semisync_slave.so';
CREATE USER 'repl'@'localhost' IDENTIFIED BY 'slavepass';
GRANT REPLICATION SLAVE ON *.* TO 'repl'@'localhost';
RESET MASTER;
CHANGE MASTER TO MASTER_HOST='localhost', MASTER_PORT=`expr 3403 - $ID`, MASTER_USER='repl', MASTER_PASSWORD='slavepass', MASTER_LOG_FILE='mysql-bin.000001', MASTER_LOG_POS=0;
START SLAVE;
EOF
EVAL cat $ID.init.sql
echo

cat > $ID.env << EOF
export MYSQL_UNIX_PORT=/tmp/mysql.sock$ID
export MYSQL_TCP_PORT=`expr 3400 + $ID`
export MYSQL_PS1="MYSQL-$ID> "
EOF
EVAL cat $ID.env
echo

cat > $ID.start << EOF
#!/bin/sh
source $ID.env
cd $PWD
if [ \`grep -c '###' $ID.cnf\` -gt 0 ]; then
    bin/mysqld_safe --defaults-file=$ID.cnf &
    sleep 1
    bin/mysql -u root -t -vvv -f < $ID.init.sql
    RET=$?
    bin/mysqladmin -u root shutdown
    [ $? ] && { echo; sed -i -e 's/###//g' $ID.cnf; echo "#!CMD:[ cat $ID.cnf ]"; cat $ID.cnf;}
else
    bin/mysqld_safe --defaults-file=$ID.cnf &
    echo
fi
EOF
EVAL cat $ID.start
chmod 755 $ID.start
echo

cat > check_repl.sql << EOF
SHOW MASTER STATUS;
SHOW SLAVE HOSTS;
SHOW VARIABLES LIKE 'rpl_semi_%';
SHOW STATUS LIKE 'rpl_semi_%';
EOF
EVAL cat check_repl.sql
echo

cat > check_repl << EOF
#!/bin/sh
cd $PWD
source 1.env
bin/mysql -u root -t -vvv -f < check_repl.sql
source 2.env
bin/mysql -u root -t -vvv -f < check_repl.sql
EOF
EVAL cat check_repl
chmod 755 check_repl
echo

EVAL ls -lh $ID.{cnf,env,start} check_repl *.sql $ID.data

