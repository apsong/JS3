#! /bin/sh

PROGRAM=`basename $0`

##################### .JS/bin/_SH_UTIL_FUNCTIONS <BEGIN> #######################
EVAL()
{
    echo "#!CMD:[" $@ "]"
    eval "$@"
}

NEWFILE()
{
    FILE=$1; [ -z "$FILE" ] && { echo 1>&2 "($PROGRAM:NEWFILE)Error: FILE is not set"; exit 100;}

    REAL_FILE=.$FILE/`date "+%Y%m%d-%H%M%S"`#$FILE

    mkdir -p .$FILE || exit 101
    if [ -h $FILE ]; then
rm -f $FILE
    elif [ -e $FILE ]; then
echo 1>&2 "($PROGRAM:NEWFILE)Note: '$FILE' exists and is not a symbolic file. Renamed to '$REAL_FILE.bak'"
        mv $FILE $REAL_FILE.bak
    fi
touch $REAL_FILE && ln -s $REAL_FILE $FILE && echo $REAL_FILE || exit 102
}
##################### .JS/bin/_SH_UTIL_FUNCTIONS <END> #########################

awk '{
    if ($1 == "CREATE") { i=NF-1; printf("CREATE %-40s ", $i) }
    else if ($1 == "STORED") { print }
    else if ($1 == "LOAD") { printf("  LOAD %-50s -> %s\n", $5,$9) }
    else if ($1 == "INSERT") { printf("  INSERT %-35s ", $4) }
    else if (match($0, /FROM[ \t]+(\w+)/, a)) { print "<-",a[1] }
}' "$@"
