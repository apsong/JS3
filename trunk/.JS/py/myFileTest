#! /bin/sh

PROGRAM=`basename $0`

##################### .JS/bin/_SH_UTIL_FUNCTIONS <BEGIN> #######################
EVAL()
{
    echo "#!CMD:[" $@ "]"
    eval "$@"
}

NEWFILE()
{
    FILE=$1; [ -z "$FILE" ] && { echo 1>&2 "($PROGRAM:NEWFILE)Error: FILE is not set"; exit 100;}

    REAL_FILE=.$FILE/`date "+%Y%m%d-%H%M%S"`#$FILE

    mkdir -p .$FILE || exit 101
    if [ -h $FILE ]; then
rm -f $FILE
    elif [ -e $FILE ]; then
echo 1>&2 "($PROGRAM:NEWFILE)Note: '$FILE' exists and is not a symbolic file. Renamed to '$REAL_FILE.bak'"
        mv $FILE $REAL_FILE.bak
    fi
touch $REAL_FILE && ln -s $REAL_FILE $FILE && echo $REAL_FILE || exit 102
}
##################### .JS/bin/_SH_UTIL_FUNCTIONS <END> #########################

EVAL file.manage.py -H 192.168.99.242 .rm    /{1,2,3,4}t
EVAL file.manage.py -H 192.168.99.242 .mkdir /{1,2,3,4}t
echo
for D in "100x10000x1M" "100x10000x1K"; do
    for T in `seq 4`; do
        EVAL file.manage.py -H 192.168.99.242 .upload $D /${T}t -t $T
        EVAL ssh test-centos cleanTmp
        sleep 10
        echo
        EVAL file.manage.py -H 192.168.99.242 .rm /${T}t/$D
        sleep 10
        echo
    done
done 2>&1 | tee `NEWFILE $PROGRAM.log`
